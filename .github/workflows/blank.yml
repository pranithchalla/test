# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
defaults:
  run:
    shell: pwsh
# A workflow run is made up of one or more jobs that can run sequentially or in
 
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    steps:
      - name: Set the value
        id: step_one
        run: |
           $GLVERSION="8.15.2"
           $GLROOT="C:\Gitleaks"
           $gitleaks_path = "${GLROOT}\gitleaks_${GLVERSION}_windows_x64"
           $gitleaks_archive_path = "${gitleaks_path}.zip"
           $gitleaks_bin = "$gitleaks_path\gitleaks.exe"
           
           echo "gitleaks_path=$gitleaks_path" >> $env:GITHUB_ENV
           echo "gitleaks_bin=$gitleaks_bin" >> $env:GITHUB_ENV
           echo "gitleaks_config_file_path=$gitleaks_config_file_path" >> $env:GITHUB_ENV
           
           echo $env:pathcheck = Join-Path $env:GLROOT "gitleaks"
           echo "test='hello'" >> $env:GITHUB_OUTPUT
           echo "testwbr=hello" >> $env:GITHUB_OUTPUT
           echo $env:pathcheck: Join-Path C: "Program Files"
           echo "action_state=yellow" >> $env:GITHUB_ENV
       # echo "test2='hello2'" >> $GITHUB_OUTPUT
       #   echo "test3='hello3'" >> GITHUB_OUTPUT
      - name: Use the value
        run: |
           echo "$env:gitleaks_bin detect -s"
           echo "$env:action_state"
           echo $env:action_state
           echo "$env:pathcheck"
        # echo ${{ steps.step_one.outputs.test }}
        #  echo ${{ steps.step_one.outputs.testwbr }}
        #  echo "$Env:path2"
       
